---
- name: Create security group for ose
  ec2_group:
    name: "{{ ec2_security_group }}"
    description: ose traffic security group
    region: "{{ ec2_region }}"
    aws_secret_key: "{{ ec2_secret_key }}"
    aws_access_key: "{{ ec2_access_key }}"
    rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 53
        to_port: 53
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8053
        to_port: 8053
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 1936
        to_port: 1936
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 4001
        to_port: 4001
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 2379
        to_port: 2380
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 4789
        to_port: 4789
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8443
        to_port: 8443
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 10250
        to_port: 10250
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 24224
        to_port: 24224
        cidr_ip: 0.0.0.0/0
      - proto: udp
        from_port: 53
        to_port: 53
        cidr_ip: 0.0.0.0/0
      - proto: udp
        from_port: 4789
        to_port: 4789
        cidr_ip: 0.0.0.0/0
      - proto: udp
        from_port: 24224
        to_port: 24224
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 53
        to_port: 53
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8053
        to_port: 8053
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 1936
        to_port: 1936
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 4001
        to_port: 4001
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 2379
        to_port: 2380
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 4789
        to_port: 4789
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8443
        to_port: 8443
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 10250
        to_port: 10250
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 24224
        to_port: 24224
        cidr_ip: 0.0.0.0/0
      - proto: udp
        from_port: 53
        to_port: 53
        cidr_ip: 0.0.0.0/0
      - proto: udp
        from_port: 4789
        to_port: 4789
        cidr_ip: 0.0.0.0/0
      - proto: udp
        from_port: 24224
        to_port: 24224
        cidr_ip: 0.0.0.0/0

- name: Launch master instances
  ec2: >
    access_key="{{ ec2_access_key }}"
    secret_key="{{ ec2_secret_key }}"
    keypair="{{ ec2_keypair }}"
    group="{{ ec2_security_group }}"
    type="{{ ec2_master_instance_type }}"
    image="{{ ec2_image }}"
    region="{{ ec2_region }}"
    zone="{{ ec2_zone }}"
    instance_tags="{'name':'master', 'type':'{{ ec2_master_instance_type }}', 'group':'{{ ec2_security_group }}'}"
    exact_count="{{ ec2_master_instance_count }}"
    count_tag="{'name':'master', 'type':'{{ ec2_master_instance_type }}'}"
    wait=true
  register: ec2

- name: Add new instance to host group
  local_action: add_host
    hostname="{{ item.public_ip }}"
    groupname=masters
  with_items: "{{ ec2.instances }}"

- name: Launch node instances
  ec2: >
    access_key="{{ ec2_access_key }}"
    secret_key="{{ ec2_secret_key }}"
    keypair="{{ ec2_keypair }}"
    group="{{ ec2_security_group }}"
    type="{{ ec2_node_instance_type }}"
    image="{{ ec2_image }}"
    region="{{ ec2_region }}"
    zone="{{ ec2_zone }}"
    instance_tags="{'name':'node', 'type':'{{ ec2_node_instance_type }}', 'group':'{{ ec2_security_group }}'}"
    exact_count="{{ ec2_node_instance_count }}"
    count_tag="{'name':'node', 'type':'{{ ec2_node_instance_type }}'}"
    wait=true
  register: ec2

- name: Add new instance to host group
  local_action: add_host
    hostname="{{ item.public_ip }}"
    groupname=nodes
  with_items: "{{ ec2.instances }}"

- name: Wait for SSH to come up
  local_action: wait_for host={{ item.public_dns_name }}
    port=22 delay=60 timeout=320 state=started
  with_items: "{{ ec2.instances }}"
